// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace _.Migrations
{
    [DbContext(typeof(AppDatabase))]
    [Migration("20250509021444_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("_.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BoardState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CurrentTurn")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlayerOne")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlayerTwo")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Winner")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.HasIndex("CurrentTurn");

                    b.HasIndex("PlayerOne");

                    b.HasIndex("PlayerTwo");

                    b.HasIndex("Winner");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("_.Models.Move", b =>
                {
                    b.Property<int>("MoveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Column")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Player")
                        .HasColumnType("TEXT");

                    b.HasKey("MoveId");

                    b.HasIndex("GameId");

                    b.HasIndex("Player");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("_.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Losses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Wins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_.Models.Game", b =>
                {
                    b.HasOne("_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("CurrentTurn")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("PlayerOne")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("PlayerTwo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("Winner")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("_.Models.Move", b =>
                {
                    b.HasOne("_.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_.Models.User", null)
                        .WithMany()
                        .HasForeignKey("Player")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
